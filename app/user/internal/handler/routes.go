// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	customer "go-zero-base/app/user/internal/handler/customer"
	user "go-zero-base/app/user/internal/handler/user"
	"go-zero-base/app/user/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: customer.AddCustomerHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/del",
				Handler: customer.DelCustomerHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get/:id",
				Handler: customer.QueryCustomerHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: customer.ListCustomerHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: customer.UpdateCustomerHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/customer"),
		rest.WithTimeout(180000*time.Millisecond),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: user.AddUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/del",
				Handler: user.DelUserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/query/:id",
				Handler: user.QueryUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: user.UpdateUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/user"),
		rest.WithTimeout(180000*time.Millisecond),
	)
}
